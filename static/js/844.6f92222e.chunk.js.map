{"version":3,"file":"static/js/844.6f92222e.chunk.js","mappings":"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","sources":["components/WeatherCardDetails/WeatherCardDetails.tsx","components/Chart/BarChart/BarChart.tsx","components/Chart/BarChart/BarChart.config.ts","components/DailyWeatherChart/DailyWeatherChart.tsx","screens/WeatherDetails/WeatherDetails.state.ts","screens/WeatherDetails/helpers.ts","screens/WeatherDetails/WeatherDetails.tsx"],"sourcesContent":["import { FC } from 'react';\n\nimport { CardContent, Stack, Typography } from '@mui/material';\n\nimport { TWeatherDetailsFields } from 'screens/WeatherDetails';\nimport { StyledCard } from 'styles/overrides/Card';\nimport { roundNumber } from 'utils/formatNumber';\n\nimport { ImageBox } from '../ImageBox';\n\ninterface IWeatherCardDetailsProps {\n  detailsFields: TWeatherDetailsFields;\n  cityName: string;\n  weatherDescription: string;\n  country: string;\n  icon: string;\n  currentTemp: number;\n  weatherDate: string;\n}\nexport const WeatherCardDetails: FC<IWeatherCardDetailsProps> = (props) => {\n  const {\n    detailsFields,\n    country,\n    cityName,\n    currentTemp,\n    weatherDescription,\n    icon,\n    weatherDate,\n  } = props;\n\n  return (\n    <StyledCard\n      sx={{\n        background: (theme) =>\n          `linear-gradient(to bottom, ${theme.palette.success.lighter}, ${theme.palette.success.light})`,\n      }}\n    >\n      <CardContent>\n        <Stack spacing={2}>\n          <Stack direction=\"row\" spacing={1} justifyContent=\"space-between\">\n            <Stack spacing={1}>\n              <Typography variant=\"h5\">\n                {cityName}, {country}\n              </Typography>\n              <Typography variant=\"body2\" textTransform=\"capitalize\">\n                {weatherDate}\n              </Typography>\n              <Typography variant=\"body2\" textTransform=\"capitalize\">\n                {weatherDescription}\n              </Typography>\n            </Stack>\n            <ImageBox imagePath={icon} width={120} />\n          </Stack>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} alignItems=\"center\">\n            <Typography\n              variant=\"h3\"\n              sx={{ display: 'flex', width: 1, justifyContent: 'center' }}\n            >\n              {roundNumber(currentTemp)} Â°C\n            </Typography>\n            <Stack spacing={1} width={1}>\n              <Typography variant=\"subtitle2\">Details</Typography>\n              {detailsFields.map((item) => (\n                <Stack\n                  key={item.fieldName}\n                  direction=\"row\"\n                  justifyContent=\"space-between\"\n                >\n                  <Typography variant=\"body2\">{item.fieldName}</Typography>\n                  <Typography variant=\"subtitle1\">{item.value}</Typography>\n                </Stack>\n              ))}\n            </Stack>\n          </Stack>\n        </Stack>\n      </CardContent>\n    </StyledCard>\n  );\n};\n","import { FC } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useTheme } from '@mui/material';\n\nimport { getDefaultChartOptions } from './BarChart.config';\nimport { IBarChartProps } from './BarChart.types';\n\nexport const BarChart: FC<IBarChartProps> = ({ chart }) => {\n  const theme = useTheme();\n  const defaultColors = [theme.palette.warning.main];\n  const { categories, series, colors = defaultColors, options } = chart;\n\n  const defaultConfigOptions = getDefaultChartOptions({\n    categories,\n    options,\n    colors,\n    theme,\n  });\n  return (\n    <ReactApexChart\n      type=\"bar\"\n      series={[{ data: series }]}\n      options={defaultConfigOptions}\n      width=\"100%\"\n      height={300}\n    />\n  );\n};\n","import { Theme } from '@mui/material';\nimport { ApexOptions } from 'apexcharts';\n\nimport { roundNumber } from 'utils/formatNumber';\n\nimport { TCategories } from './BarChart.types';\n\ninterface IgetDefaultChartOptionsProps {\n  options?: ApexOptions;\n  categories: TCategories;\n  theme: Theme;\n  colors: string[];\n}\n\nexport const getDefaultChartOptions = (\n  props: IgetDefaultChartOptionsProps\n): ApexOptions => {\n  const { categories, options, colors, theme } = props;\n\n  return {\n    stroke: { show: false },\n    dataLabels: {\n      formatter(val) {\n        return `${roundNumber(Number(val || 0)).toString()} Â°C`;\n      },\n      style: {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        colors: [theme.palette.grey[800]],\n      },\n    },\n    chart: {\n      zoom: {\n        enabled: false,\n      },\n      toolbar: {\n        show: false,\n      },\n    },\n    states: {\n      hover: {\n        filter: {\n          type: 'darken',\n          value: 0.8,\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '70%',\n      },\n    },\n    colors,\n    yaxis: {\n      labels: {\n        formatter: (val) => `${val.toString()} Â°C`,\n      },\n      title: {\n        text: 'Temperature',\n      },\n    },\n    xaxis: {\n      tickPlacement: 'on',\n      categories,\n    },\n    ...options,\n    responsive: [\n      {\n        breakpoint: theme.breakpoints.values.sm,\n        options: {\n          dataLabels: {\n            enabled: false,\n          },\n          tooltip: {\n            fixed: {\n              enabled: true,\n              position: 'top',\n            },\n          },\n        },\n      },\n      {\n        breakpoint: theme.breakpoints.values.md,\n        options: {\n          dataLabels: {\n            enabled: true,\n          },\n          tooltip: {\n            fixed: {\n              enabled: false,\n            },\n          },\n        },\n      },\n    ],\n  };\n};\n","import { FC } from 'react';\nimport { CardContent, CardHeader, Skeleton } from '@mui/material';\n\nimport { StyledCard } from 'styles/overrides/Card';\nimport { IChartData } from 'screens/WeatherDetails';\n\nimport { BarChart } from '../Chart/BarChart/BarChart';\n\ninterface IDailyWeatherChartProps {\n  chartData: IChartData;\n  isLoading: boolean;\n}\nexport const DailyWeatherChart: FC<IDailyWeatherChartProps> = ({\n  chartData,\n  isLoading,\n}) => {\n  const { categories, series, options } = chartData;\n  return (\n    <StyledCard>\n      <CardHeader title=\"Daily Forecast\" />\n      <CardContent>\n        {isLoading ? (\n          <Skeleton variant=\"rounded\" sx={{ width: 1, height: 200 }} />\n        ) : (\n          <BarChart\n            chart={{\n              series,\n              categories,\n              options,\n            }}\n          />\n        )}\n      </CardContent>\n    </StyledCard>\n  );\n};\n","import { useMemo } from 'react';\nimport { useTheme } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\n\nimport { useAppDispatch, useAppSelector } from 'hooks/useRedux';\nimport { fetchDailyForecastData } from 'services/redux/weatherReducer';\nimport { fDate } from 'utils/formatDate';\n\nimport { getColorCondtions, getDetailsFields } from './helpers';\nimport { IChartData } from './WeatherDetails.types';\n\nexport const useWeatherDetailsState = () => {\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  const theme = useTheme();\n\n  const { selectedWeatherData, dailyForecastData, isFetchDailyForecast } =\n    useAppSelector((state) => state.weather);\n  const { name, sys, weather, main, wind, dt } = selectedWeatherData;\n\n  const onFetchDailyForecastDataHandler = () =>\n    dispatch(fetchDailyForecastData(name));\n\n  const chartData = dailyForecastData?.list?.reduce(\n    (acc: IChartData, item) => {\n      const time = item.dt_txt.split(' ')[1];\n      acc.categories.push(time);\n      acc.series.push(item.main.temp);\n      return acc;\n    },\n\n    { categories: [], series: [] }\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const colorConditionsRanges = useMemo(() => getColorCondtions(theme), []);\n  const detailFields = getDetailsFields({\n    main,\n    wind,\n  });\n\n  const weatherDate = fDate(dt * 1000);\n  return {\n    onFetchDailyForecastDataHandler,\n    pathname,\n    colorConditionsRanges,\n    isFetchDailyForecast,\n    chartData,\n    main,\n    name,\n    detailFields,\n    sys,\n    weather,\n    dailyForecastData,\n    weatherDate,\n  };\n};\n","import { Theme } from '@mui/material';\n\nimport { IWeatherApiResponse } from 'services/redux/weatherReducer';\nimport { roundNumber } from 'utils/formatNumber';\n\nexport const getDetailsFields = (\n  data: Pick<IWeatherApiResponse, 'main' | 'wind'>\n) => {\n  const { feels_like, pressure, humidity, temp_max, temp_min } = data.main;\n  const { speed } = data.wind;\n  return [\n    {\n      fieldName: 'Feel Like',\n      value: `${roundNumber(feels_like)} Â°C`,\n    },\n    {\n      fieldName: 'Wind',\n      value: `${speed} m/s`,\n    },\n\n    {\n      fieldName: 'Humidity',\n      value: `${humidity} %`,\n    },\n    {\n      fieldName: 'Pressure',\n      value: `${pressure} hPa`,\n    },\n    {\n      fieldName: 'Max. Temperature',\n      value: `${roundNumber(temp_max)} Â°C`,\n    },\n    {\n      fieldName: 'Min. Temperature',\n      value: `${roundNumber(temp_min)} Â°C`,\n    },\n  ];\n};\n\nexport const getColorCondtions = (theme: Theme) => [\n  {\n    from: 0,\n    to: 10,\n    color: theme.palette.warning.lighter,\n  },\n  {\n    from: 11,\n    to: 20,\n    color: theme.palette.warning.main,\n  },\n  {\n    from: 21,\n    to: 100,\n    color: theme.palette.primary.main,\n  },\n  {\n    from: -10,\n    to: -1,\n    color: theme.palette.secondary.main,\n  },\n  {\n    from: -20,\n    to: -11,\n    color: theme.palette.secondary.dark,\n  },\n  {\n    from: -100,\n    to: -21,\n    color: theme.palette.secondary.darker,\n  },\n];\n\nexport const getCustomTooltipMarkup = (\n  data: Pick<IWeatherApiResponse, 'main'>\n) => {\n  const { main } = data;\n  return `<div class=\"tooltipWrapper\">\n            <div class=\"rowWrapper\">\n              <div>Curr. Temp: </div>\n              <div>${roundNumber(main.temp)}Â°C</div>\n            </div> \n            <div class=\"rowWrapper\">\n              <div>Max. Temp: </div>\n              <div>${roundNumber(main.temp_max)}Â°C</div>\n            </div>\n            <div class=\"rowWrapper\">\n            <div>Min. Temp: </div>\n            <div>${roundNumber(main.temp_min)}Â°C</div>\n            </div>\n          </div>`;\n};\n","import { FC, useEffect } from 'react';\nimport { Button, Grid } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { WeatherCardDetails } from 'components/WeatherCardDetails';\nimport { DailyWeatherChart } from 'components/DailyWeatherChart';\n\nimport { useWeatherDetailsState } from './WeatherDetails.state';\nimport { getCustomTooltipMarkup } from './helpers';\n\nimport './BarChartStyles.css';\n\nimport { ROUTES } from 'constants/routes';\n\nconst WeatherDetails: FC = () => {\n  const {\n    onFetchDailyForecastDataHandler,\n    main,\n    name,\n    detailFields,\n    sys,\n    weather,\n    chartData,\n    colorConditionsRanges,\n    weatherDate,\n    isFetchDailyForecast,\n    dailyForecastData,\n    pathname,\n  } = useWeatherDetailsState();\n\n  useEffect(() => {\n    onFetchDailyForecastDataHandler();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        item\n        xs={12}\n        display=\"flex\"\n        justifyContent={{ xs: 'center', sm: 'flex-end' }}\n      >\n        <Button\n          component={RouterLink}\n          variant=\"contained\"\n          disabled={pathname === ROUTES.home}\n          to={ROUTES.home}\n        >\n          To Home Page\n        </Button>\n      </Grid>\n      <Grid item xs={12} md={6} justifyContent=\"center\">\n        <WeatherCardDetails\n          detailsFields={detailFields}\n          cityName={name}\n          weatherDescription={weather[0].description}\n          country={sys.country}\n          icon={weather[0].icon}\n          currentTemp={main.temp}\n          weatherDate={weatherDate}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <DailyWeatherChart\n          isLoading={isFetchDailyForecast}\n          chartData={{\n            ...chartData,\n            options: {\n              plotOptions: {\n                bar: {\n                  colors: {\n                    ranges: colorConditionsRanges,\n                  },\n                },\n              },\n              tooltip: {\n                custom: (options) => {\n                  return getCustomTooltipMarkup({\n                    main: dailyForecastData.list[options.dataPointIndex].main,\n                  });\n                },\n              },\n            },\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WeatherDetails;\n"],"names":["WeatherCardDetails","props","detailsFields","country","cityName","currentTemp","weatherDescription","icon","weatherDate","_jsx","StyledCard","sx","background","theme","concat","palette","success","lighter","light","children","CardContent","_jsxs","Stack","spacing","direction","justifyContent","Typography","variant","textTransform","ImageBox","imagePath","width","xs","sm","alignItems","display","roundNumber","map","item","fieldName","value","BarChart","_ref","chart","useTheme","defaultColors","warning","main","categories","series","_chart$colors","colors","defaultConfigOptions","options","_objectSpread","stroke","show","dataLabels","formatter","val","Number","toString","style","fontSize","fontWeight","grey","zoom","enabled","toolbar","states","hover","filter","type","plotOptions","bar","columnWidth","yaxis","labels","title","text","xaxis","tickPlacement","responsive","breakpoint","breakpoints","values","tooltip","fixed","position","md","getDefaultChartOptions","ReactApexChart","data","height","DailyWeatherChart","chartData","isLoading","CardHeader","Skeleton","useWeatherDetailsState","_dailyForecastData$li","dispatch","useAppDispatch","pathname","useLocation","_useAppSelector","useAppSelector","state","weather","selectedWeatherData","dailyForecastData","isFetchDailyForecast","name","sys","wind","dt","list","reduce","acc","time","dt_txt","split","push","temp","colorConditionsRanges","useMemo","from","to","color","primary","secondary","dark","darker","getColorCondtions","detailFields","_data$main","feels_like","pressure","humidity","temp_max","temp_min","speed","getDetailsFields","fDate","onFetchDailyForecastDataHandler","fetchDailyForecastData","_useWeatherDetailsSta","useEffect","Grid","container","Button","component","RouterLink","disabled","ROUTES","description","ranges","custom","getCustomTooltipMarkup","dataPointIndex"],"sourceRoot":""}